import{forwardRef,createElement}from"react";import{oneOf}from"prop-types";const composer=(...a)=>a.filter(Boolean).map(a=>({[String.toString()]:()=>a,[Number.toString()]:()=>a,[Array.toString()]:()=>composer(...a),[Object.toString()]:()=>composer(Object.keys(a).filter(b=>a[b]))})[a.constructor.toString()]).map(a=>a()).flat().join(" ").trim();var useTooltip=(a,b="")=>({className:composer(b,"tooltip"),"data-tooltip":a}),useBadge=(a,b="")=>({className:composer(b,"badge"),"data-badge":a});const proxy=(a,b,c)=>a(new Proxy(b,{get(a,b,d){return c.push(b),Reflect.get(a,b,d)}})),factory=({type:a,className:b,style:c,rewire:d=a=>a||{},wrap:e=a=>a})=>forwardRef((f,g)=>{const h=[];let{className:i,children:j}=f;const k=c&&proxy(c,f,h),l=d&&proxy(d,f,h);i=composer(b,k,i),j=e(j,f);const m=h.reduce((a,b)=>(a[b]=void 0)||a,{});return f={...l,children:j,...m,ref:g,className:i},createElement(a,f)}),oneOfOption=a=>oneOf(Object.keys(a).map(b=>a[b]));export{useBadge as a,composer as b,factory as f,oneOfOption as o,useTooltip as u};
